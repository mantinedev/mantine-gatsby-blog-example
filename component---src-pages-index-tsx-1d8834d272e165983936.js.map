{"version":3,"sources":["webpack:///./src/components/bio.tsx","webpack:///./src/pages/index.tsx"],"names":["Bio","style","display","marginTop","size","variant","color","component","href","StyledLink","styled","FadeLink","BlogIndex","props","data","useStaticQuery","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","keywords","map","node","frontmatter","fields","slug","excerpt","key","order","to","date","dangerouslySetInnerHTML","__html","description"],"mappings":"2FAAA,uEAGaA,EAAM,WACjB,OACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,UAAW,MACxC,kBAAC,OAAD,CAAMC,KAAK,MACT,kBAAC,KAAD,CAAIC,QAAQ,QAAQC,MAAM,SAD5B,8BAE8B,IAC5B,kBAAC,OAAD,CAAMF,KAAK,KAAKG,UAAU,IAAIF,QAAQ,OAAOG,KAAK,uBAAlD,WAEQ,IALV,4BAM4B,IAC1B,kBAAC,OAAD,CACEJ,KAAK,KACLG,UAAU,IACVF,QAAQ,OACRG,KAAK,6DAJP,eAOQ,IAdV,+BAe+B,IAC7B,kBAAC,OAAD,CACEJ,KAAK,KACLG,UAAU,IACVF,QAAQ,OACRG,KAAK,uCAJP,sBAOQ,IAvBV,+B,kCCNN,oHAUMC,EAAaC,YAAOC,KAAV,oEAAGD,CAAH,sBAuEDE,UAjEG,SAACC,GACjB,IAAMC,EAAOC,yBAAe,aAyBtBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUV,EAAMU,SAAUJ,MAAOH,GACvC,kBAAC,IAAD,CACEG,MAAM,YACNK,SAAU,CAAC,OAAD,iCAGXJ,EAAMK,KAAI,YAAwC,IAArCC,EAAqC,EAArCA,KACNC,EAAcD,EAAMC,YACpBC,EAASF,EAAME,OACfC,EAAOD,EAAOC,KACdC,EAAUJ,EAAMI,QAEhBX,EAAQQ,EAAYR,OAASS,EAAOC,KAC1C,OACE,yBAAKE,IAAKF,GACR,kBAAC,QAAD,CAAOG,MAAO,GACZ,kBAACvB,EAAD,CAAYwB,GAAIJ,GAAOV,IAEzB,kBAAC,OAAD,CAAMf,KAAK,MAAMuB,EAAYO,MAC7B,kBAAC,2BAAD,KACE,uBACEC,wBAAyB,CACvBC,OAAQT,EAAYU,aAAeP,UAQ/C,kBAAC,IAAD","file":"component---src-pages-index-tsx-1d8834d272e165983936.js","sourcesContent":["import React from \"react\";\nimport { Text, Hr } from \"@mantine/core\";\n\nexport const Bio = () => {\n  return (\n    <div style={{ display: \"flex\", marginTop: 100 }}>\n      <Text size=\"sm\">\n        <Hr variant=\"solid\" color=\"blue\" />\n        This is example project for{\" \"}\n        <Text size=\"sm\" component=\"a\" variant=\"link\" href=\"https://mantine.dev\">\n          Mantine\n        </Text>{\" \"}\n        usage this Gatsby. Browse{\" \"}\n        <Text\n          size=\"sm\"\n          component=\"a\"\n          variant=\"link\"\n          href=\"https://github.com/mantinedev/mantine-gatsby-blog-example\"\n        >\n          source code\n        </Text>{\" \"}\n        of this project on Github or{\" \"}\n        <Text\n          size=\"sm\"\n          component=\"a\"\n          variant=\"link\"\n          href=\"https://mantine.dev/pages/examples/\"\n        >\n          see other examples\n        </Text>{\" \"}\n        on Mantine docs website.\n      </Text>\n    </div>\n  );\n};\n","import { graphql, PageRendererProps, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Bio } from \"../components/bio\"\nimport { Layout } from \"../components/layout\"\nimport { FadeLink } from \"../components/link\"\nimport { SEO } from \"../components/seo\"\nimport { MarkdownRemark } from \"../graphql-types\"\nimport { TypographyStylesProvider, Title, Text } from \"@mantine/core\"\n\nconst StyledLink = styled(FadeLink)`\n  box-shadow: none;\n`\n\ntype Props = PageRendererProps\n\nconst BlogIndex = (props: Props) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            excerpt\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n\n      {posts.map(({ node }: { node: MarkdownRemark }) => {\n        const frontmatter = node!.frontmatter!\n        const fields = node!.fields!\n        const slug = fields.slug!\n        const excerpt = node!.excerpt!\n\n        const title = frontmatter.title || fields.slug\n        return (\n          <div key={slug}>\n            <Title order={2}>\n              <StyledLink to={slug}>{title}</StyledLink>\n            </Title>\n            <Text size=\"sm\">{frontmatter.date}</Text>\n            <TypographyStylesProvider>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: frontmatter.description || excerpt,\n                }}\n              />\n            </TypographyStylesProvider>\n          </div>\n        )\n      })}\n\n      <Bio />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n"],"sourceRoot":""}